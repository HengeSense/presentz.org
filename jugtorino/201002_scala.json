{
  "title" : "Scala, un Java migliore",
  "time" : "20100212",
  "speaker" : "Di Mingo/Marrocco",
  "chapters" : [ {
    "duration" : 5458.53,
    "media" : {
      "video" : {
        "url" : "http://vimeo.com/28343448",
        "thumb" : "http://b.vimeocdn.com/ts/189/007/189007952_200.jpg"
      },
      "slides" : [
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756085723035.jpg",
            "title" : "JugTorino Meeting Febbraio 2010 ",
            "time" : 0
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756057089606.swf",
            "title" : "Speakers",
            "time" : 8
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756098585528.swf",
            "title" : "Scala, un Java migliore",
            "time" : 17.1597
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/20100323075602724871.swf",
            "title" : "Scalable Language",
            "time" : 103.142
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756034864680.swf",
            "title" : "Object Oriented",
            "time" : 240.70600000000002
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756049148122.swf",
            "title" : "Object Oriented Pure",
            "time" : 361.35
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756089417739.swf",
            "title" : "Functional",
            "time" : 508.04999999999995
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/2010032307555910330.swf",
            "title" : "Java Virtual Machine",
            "time" : 620.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/20100323075559271980.swf",
            "title" : "println(1 * 2) val numbers = List(1, 2, 3) numbers.foreach(n => println(n))",
            "time" : 831.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230755594537278.swf",
            "title" : "$ scala scala> println(1 * 2) 2 scala> var numbers = List(1, 2, 3) scala> numbers.foreach(n => println(n)) 1 2 3",
            "time" : 1021.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756040912155.swf",
            "title" : "Scala conventions",
            "time" : 1101.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230755594537278.swf",
            "title" : "$ scala scala> println(1 * 2) 2 scala> var numbers = List(1, 2, 3) scala> numbers.foreach(n => println(n)) 1 2 3",
            "time" : 1142.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230755588983661.swf",
            "title" : "return is almost optional",
            "time" : 1221.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230755598692295.swf",
            "title" : "def sum(a: Int, b: Int) = return a + b",
            "time" : 1321.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/20100323075605519938.swf",
            "title" : "scala> def sum(a: Int, b: Int) = a + b scala> println(sum(1, 2)) 3",
            "time" : 1436.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230755585144531.swf",
            "title" : "; is optional",
            "time" : 1536.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756095173751.swf",
            "title" : "def sum(a: Int, b:Int) = { println(a); println(b); a + b; }",
            "time" : 1544.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/20100323075602891189.swf",
            "title" : "Type inference",
            "time" : 1573.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756093173272.swf",
            "title" : "Type definition is almost optional",
            "time" : 1740.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756095173751.swf",
            "title" : "def sum(a: Int, b:Int) = { println(a); println(b); a + b; }",
            "time" : 1816.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/20100323075606270808.swf",
            "title" : "val a:Int = 1",
            "time" : 1894.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/20100323075600234584.swf",
            "title" : "def funz(a:Int) = 1",
            "time" : 1942.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756016006610.swf",
            "title" : "def funz(a: Int):Int = 1",
            "time" : 1993.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756042936593.swf",
            "title" : "Operator Overloading",
            "time" : 2116.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756053116161.swf",
            "title" : "Scala hasn't operators",
            "time" : 2165.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756045007379.swf",
            "title" : "Operators are object's functions",
            "time" : 2193.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756010251893.swf",
            "title" : "+ - * / are valid function names",
            "time" : 2249.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756064448147.swf",
            "title" : "Lenient invocation syntax",
            "time" : 2413.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756030696837.swf",
            "title" : "object.method(object) object method object",
            "time" : 2453.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756102247999.swf",
            "title" : "object.+(object) object + object",
            "time" : 2487.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756004695101.swf",
            "title" : "1.+(1) 1+1",
            "time" : 2500.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230755587195056.swf",
            "title" : "Operator precedence?",
            "time" : 2512.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756023462966.swf",
            "title" : "1.+(1).+(2).*(2) == 8",
            "time" : 2524.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756074861608.swf",
            "title" : "1.+(1).+(2).*(2) == 6",
            "time" : 2555.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756039139570.swf",
            "title" : "Immutability rocks",
            "time" : 2637.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756025338681.swf",
            "title" : "Value vs Variable",
            "time" : 2797.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756066689349.swf",
            "title" : "A variable is mutable",
            "time" : 2851.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756008494950.swf",
            "title" : "var a = 1 a = 2 // ok",
            "time" : 2856.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756021819276.swf",
            "title" : "val a = 1 a = 2 // error: reassignment to val",
            "time" : 2867.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756072721557.swf",
            "title" : "scala val ~= java final attribute",
            "time" : 2891.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756091364792.swf",
            "title" : "classes",
            "time" : 2944.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756036922320.swf",
            "title" : "public class Car { private int milesDriven; private final int age; public Car(int age) { this.age = age; } public void driveFor(int distance) { milesDriven += distance; } public int getAge() { return age; } public int getMiles() { return miles; } }",
            "time" : 2948.06
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756100347174.swf",
            "title" : "class Car(val age:Int) { private var milesDriven = 0 def driveFor(distance:Int) = milesDriven += distance def miles = milesDriven }",
            "time" : 2990.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756032793377.swf",
            "title" : "val car = new Car(2010) car driveFor 100 println(car.age) println(car.miles)",
            "time" : 3156.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756100347174.swf",
            "title" : "class Car(val age:Int) { private var milesDriven = 0 def driveFor(distance:Int) = milesDriven += distance def miles = milesDriven }",
            "time" : 3252.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756032793377.swf",
            "title" : "val car = new Car(2010) car driveFor 100 println(car.age) println(car.miles)",
            "time" : 3266.95
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756059026256.swf",
            "title" : "Class constructor?",
            "time" : 3338.73
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756080555387.swf",
            "title" : "Class costructor is class body itself!",
            "time" : 3341.92
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756087684740.swf",
            "title" : "class Person(name:String) { var age = 0 println(name) }",
            "time" : 3365.84
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756070792910.swf",
            "title" : "Costructors override",
            "time" : 3412.5
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756096901721.swf",
            "title" : "class Person(name:String) { var age = 0 def this(name:String, anAge:Int) { this(name) age = anAge } }",
            "time" : 3475.28
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230755596794846.swf",
            "title" : "Map",
            "time" : 3857.5
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756019808470.swf",
            "title" : "write(/tmp/output) { out => out write scala rocks! }",
            "time" : 3929.7
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756082301091.swf",
            "title" : "switch(poor) { case 1: doSomething(); break; case 2: doSomethingElse(); break; default: inOtherCases(); }",
            "time" : 4278.06
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756012174842.swf",
            "title" : "Scala match is powerfull",
            "time" : 4290.84
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756006594818.swf",
            "title" : "def activity(day: String) { day match { case sunday => println(sleep) case _ => println(code) } } List(monday, sunday).foreach { activity }",
            "time" : 4294.73
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756076872860.swf",
            "title" : "can match int, string..",
            "time" : 4360.84
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756060994455.swf",
            "title" : "can match list!",
            "time" : 4363.62
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756047154854.swf",
            "title" : "List(1, 2) match { case List(2, 1) => println(!match) case List(1, 2) => println(match!) }",
            "time" : 4366.39
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756000616475.swf",
            "title" : "can match case class!",
            "time" : 4394.17
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756051359525.swf",
            "title" : "case class?",
            "time" : 4396.39
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756068608213.swf",
            "title" : "are special classes used in pattern matching",
            "time" : 4398.62
          },
          {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756013984058.swf",
            "title" : "case class Red extends Color(red) case class Blue extends Color(blue) def brush(color:Color) { color match { case Red() => print(fire) case Blue() => print(water) } } brush(Red())",
            "time" : 4422.5
          }, {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756017807657.swf",
            "title" : "extract matching values",
            "time" : 4523.62
          }, {
            "url" : "http://presentz.org/assets/jugtorino/201002_scala/201003230756078843427.swf",
            "title" : "case class Color(name:String) val red = Color(red) red match { case Color(name) => println(name) }",
            "time" : 4526.95
          } ]
    }
  } ]
}
